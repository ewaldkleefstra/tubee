{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About tubee What ist tubee? tubee is a I/O data management engine with proxy capabilities for other services and also features I/O synchronization support for those. Create, Modify and Delete records in namespaced data collections. Import and export records from and to different technologies like databases, files, http services and more. Access endpoint records via the same system (data proxy) and much more. Licensing This software is freely available under the terms of GPL-3.0 including this documenation. Contribute There are many ways to contribute. Also just reporting issues and features requests will help to make the software better! Please continue reading in the Contributing chapter . Changelog A changelog is available here .","title":"About tubee"},{"location":"#about-tubee","text":"","title":"About tubee"},{"location":"#what-ist-tubee","text":"tubee is a I/O data management engine with proxy capabilities for other services and also features I/O synchronization support for those. Create, Modify and Delete records in namespaced data collections. Import and export records from and to different technologies like databases, files, http services and more. Access endpoint records via the same system (data proxy) and much more.","title":"What ist tubee?"},{"location":"#licensing","text":"This software is freely available under the terms of GPL-3.0 including this documenation.","title":"Licensing"},{"location":"#contribute","text":"There are many ways to contribute. Also just reporting issues and features requests will help to make the software better! Please continue reading in the Contributing chapter .","title":"Contribute"},{"location":"#changelog","text":"A changelog is available here .","title":"Changelog"},{"location":"02-getting-started/","text":"Getting started You need two things to get started, a server (usually you want a hosted server) and tubectl. tubectl is the console client for Linux, Windows and OS X. The tubee server works with various different resource types. Each of those resources must be created manually to get a working setup. Resorce types: Resource Description Namespace Resources like collections must be part of a single namespace. Collection A collection is group of similar data objects. Each collection holds data objects and is part of a namespace. Endpoint An endpoint represents a remote server for proxying, import from, or export to. DataObject An actual object which must be part of a collection. EndpointObject Besides data objects there are also endpoint objects. The diference is that an endpoint object represents the state of an object on an endpoint. Workflow A workflow defines how and what data should be synchronized between endpoints and collections. A worklfow is always attached to an endpoint. Secret Holds sensible data which can be injected into other resources. Usually secrets injected into endpoint resources. User A simple user with password authentication. (You may also use OpenID-connect or LDAP auth adapter instead local user resources) AccessRole Defines an access role which can be used to gain access. Authenticated users are are part of an access-rule. AccessRule Create access rules (RBAC) based on HTTP requests. Job A jobs defines what endpoints (or whole mandators or collections) should be synchronized and at what time/interval. Process A process represents a single execution of a job Log Each process/job will create log resources which can be requested for each","title":"Getting started"},{"location":"02-getting-started/#getting-started","text":"You need two things to get started, a server (usually you want a hosted server) and tubectl. tubectl is the console client for Linux, Windows and OS X. The tubee server works with various different resource types. Each of those resources must be created manually to get a working setup. Resorce types: Resource Description Namespace Resources like collections must be part of a single namespace. Collection A collection is group of similar data objects. Each collection holds data objects and is part of a namespace. Endpoint An endpoint represents a remote server for proxying, import from, or export to. DataObject An actual object which must be part of a collection. EndpointObject Besides data objects there are also endpoint objects. The diference is that an endpoint object represents the state of an object on an endpoint. Workflow A workflow defines how and what data should be synchronized between endpoints and collections. A worklfow is always attached to an endpoint. Secret Holds sensible data which can be injected into other resources. Usually secrets injected into endpoint resources. User A simple user with password authentication. (You may also use OpenID-connect or LDAP auth adapter instead local user resources) AccessRole Defines an access role which can be used to gain access. Authenticated users are are part of an access-rule. AccessRule Create access rules (RBAC) based on HTTP requests. Job A jobs defines what endpoints (or whole mandators or collections) should be synchronized and at what time/interval. Process A process represents a single execution of a job Log Each process/job will create log resources which can be requested for each","title":"Getting started"},{"location":"03-namespaces/","text":"Namespaces tubee has most things sorted in namespaces. Meaning a resource is attached on a namespace to avoid name conflicts and also make it easy to deploy RBAC rules. Create a new namespace spec.yaml: kind: Namespace name: foobar tubectl create -f spec.yaml Check the just created resource: tubectl get ns foobar -o yaml The namespace foobar is now ready. Note : Namespace is the simplest resource type of all, it only requires a name.","title":"Namespaces"},{"location":"03-namespaces/#namespaces","text":"tubee has most things sorted in namespaces. Meaning a resource is attached on a namespace to avoid name conflicts and also make it easy to deploy RBAC rules.","title":"Namespaces"},{"location":"03-namespaces/#create-a-new-namespace","text":"spec.yaml: kind: Namespace name: foobar tubectl create -f spec.yaml Check the just created resource: tubectl get ns foobar -o yaml The namespace foobar is now ready. Note : Namespace is the simplest resource type of all, it only requires a name.","title":"Create a new namespace"},{"location":"10-deploy-server/","text":"Getting started This is a step-by-step tutorial how to correctly deploy the tubee server. There are multiple supported ways to deploy tubee: Classic way as deb package via apt Manually as tar archive Docker (docker-compose or via a orchestration plattform like Kubernetes ) Compile manually from scratch The docker deployment is the recommended way to deploy tubee. And it is also the simplest way. Debian based distribution Both the server and the web ui get distributed as .deb packages to make it easy to install and upgrade. Requirements : * Debian based linux distribution You need a running debian based linux distribution. This can be debian itself or debian based distribution like Ubuntu . You may also convert the package using alien to rpm and other package formats. If you are not sure how to deploy such a server please visit the documentation of those distributions as this is out of the scope of this documentation. This tutorial describes how to install all tubee components on the same server. In production environments this may not be the best way and it is neither scalable nor performant. You certainly can deploy all components on different server. The tubee server is fully scalable and can be scaled horizontally as well as can the required components like MongoDB. Everything is easlily scaleable to your needs. Package Repository You need to add the tubee repository to your package management configuration as well as repositories for the latest PHP and MongoDB releases. The following commands must be executed with root permissions unless noted otherwise. tubee apt-get -y install apt-transport-https echo deb https://dl.bintray.com/gyselroth/tubee stable main | sudo tee -a /etc/apt/sources.list wget -qO - https://bintray.com/user/downloadSubjectPublicKey?username=gyselroth | sudo apt-key add - sudo apt-get update Note : If you want to install beta and alpha versions replace stable with unstable . Pre-releases are only ment for testing purposes and are in no way recommended in production environements! Note : This repository also includes the shell client tubectl . PHP The tubee server requires PHP 7.2. If your current distribution does not provide 7.2 out of their stable archives (which is most certainly the case) please add the PPA ppa:ondrej/php which will provide the latest PHP 7.2 releases. sudo apt-get install lsb-release ca-certificates sudo wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg echo deb https://packages.sury.org/php/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/php.list sudo apt-get update MongoDB tubee uses MongoDB as its main database. At least MongoDB 3.4 is required. If your current distribution does not ship at least this release you will need to add the official MongoDB repository. Note : MongoDB recommends to use the official MongoDB repository anyway since the releases in the debian and or ubuntu repositories are not maintained by them and lack newer minor releases. sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5 echo deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/3.6 main | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list sudo apt-get update Note : This will add the repository for debian jessie, if you need another repository please refer to the MongoDB installation docs. Install tubee Now tubee and its components can be installed. apt-get install mongodb-org tubee Docker (docker-compose) The easiest, fastest and recommended way to deploy a tubee environment is to spin it up using docker and docker-compose. Since the installation is not the same for different host os and docker can be started on Linux, Windows and Mac please visit the docker documentation on how to install docker and docker-compose . Now a docker-compose file is required with all required containers by tubee. Create a file named tubee-stable.yaml with this content: Requirements : docker docker-compose mongodb: image: mongo:3.6.0 postfix: image: webuni/postfix tubee: image: gyselroth/tubee:latest links: - clamav - mongodb - elasticsearch - postfix - browserless entrypoint: php-fpm environment: - BALLOON_MONGODB_URI=mongodb://mongodb:27017 - BALLOON_CLAMAV_URI=tcp://clamav:3310 - BALLOON_ELASTICSEARCH_URI=http://elasticsearch:9200 - BALLOON_WOPI_URL=https://tubee - BALLOON_SMTP_HOST=postfix - BALLOON_URL=http://localhost:8080 - BALLOON_BURL_BROWSERLESS_URL=http://browserless:3000 tubee-jobs: image: gyselroth/tubee:latest links: - clamav - mongodb - elasticsearch - postfix - browserless entrypoint: tubeecli jobs environment: - BALLOON_MONGODB_URI=mongodb://mongodb:27017 - BALLOON_CLAMAV_URI=tcp://clamav:3310 - BALLOON_ELASTICSEARCH_URI=http://elasticsearch:9200 - BALLOON_WOPI_URL=https://tubee - BALLOON_SMTP_HOST=postfix - BALLOON_URL=http://localhost:8080 - BALLOON_BURL_BROWSERLESS_URL=http://browserless:3000 The tubee server can now be started using: docker-compose -f tubee-stable.yaml up You need to initialize tubee once (You do not need to execute this everytime you start the server via docker-compose, it is just a one time call): docker exec tubee-stable-tubee_1 tubeecli upgrade -i -vvv Note : All tubee containers provide a version tag besides latest . It is best practice to use an exact version of a service instead the latest tag in production environment. The containers provide a latest-unstable tag for the tubee-jobs, tubee and tubee-web container. It is in no way reccomened to use pre-releases in production environments! Note : If you want to install beta and alpha versions replace latest with latest-unstable or specify an exact version tag. Pre-releases are only ment for testing purposes and are in no way recommended in production environements! Deploy on kubernetes Using the tar archive Instead a deb package you may also use a tar archive and install tubee manually on your system. A tar archive is an already builded relase, you you just need to have all requirements installed on your system, you may have a look at Manually install from source . Manually install from source This topic is only for advanced users or developers and describes how to deploy tubee by installing from source. If you are a developer please also continue reading this article. Requirements : posix based operating system (Basically every linux/unix) make comoser git php = 7.2 php ext-mongodb php ext-curl php ext-mbstring php ext-posix php ext-pnctl * php ext-apcu Optional requirements : php ext-imagick (If you want to use The ImageEndpoint) php ext-ldap (If you want to use LDAP authentication and/or the LdapEndpoint) php ext-smb (If you want to use the SmbStorage) php ext-xml (If you want to use the XmlEndpoint) php ext-pdo (If you want to use the PdoEndpoint) php ext-mysql (If you want ot use the MysqlEndpoint) This will only install the tubee server. Dependencies such as MongoDB do not get installed. You can install those dependencies either by using distributed packages, see Debian based distribution or by installing them seperately from source. Install tubee server git clone https://github.com/gyselroth/tubee.git cd tubee make install Note : You can also create .deb or .tar packages using make. Just execute either make deb or make tar or make dist for both.","title":"Getting started"},{"location":"10-deploy-server/#getting-started","text":"This is a step-by-step tutorial how to correctly deploy the tubee server. There are multiple supported ways to deploy tubee: Classic way as deb package via apt Manually as tar archive Docker (docker-compose or via a orchestration plattform like Kubernetes ) Compile manually from scratch The docker deployment is the recommended way to deploy tubee. And it is also the simplest way.","title":"Getting started"},{"location":"10-deploy-server/#debian-based-distribution","text":"Both the server and the web ui get distributed as .deb packages to make it easy to install and upgrade. Requirements : * Debian based linux distribution You need a running debian based linux distribution. This can be debian itself or debian based distribution like Ubuntu . You may also convert the package using alien to rpm and other package formats. If you are not sure how to deploy such a server please visit the documentation of those distributions as this is out of the scope of this documentation. This tutorial describes how to install all tubee components on the same server. In production environments this may not be the best way and it is neither scalable nor performant. You certainly can deploy all components on different server. The tubee server is fully scalable and can be scaled horizontally as well as can the required components like MongoDB. Everything is easlily scaleable to your needs.","title":"Debian based distribution"},{"location":"10-deploy-server/#package-repository","text":"You need to add the tubee repository to your package management configuration as well as repositories for the latest PHP and MongoDB releases. The following commands must be executed with root permissions unless noted otherwise.","title":"Package Repository"},{"location":"10-deploy-server/#tubee","text":"apt-get -y install apt-transport-https echo deb https://dl.bintray.com/gyselroth/tubee stable main | sudo tee -a /etc/apt/sources.list wget -qO - https://bintray.com/user/downloadSubjectPublicKey?username=gyselroth | sudo apt-key add - sudo apt-get update Note : If you want to install beta and alpha versions replace stable with unstable . Pre-releases are only ment for testing purposes and are in no way recommended in production environements! Note : This repository also includes the shell client tubectl .","title":"tubee"},{"location":"10-deploy-server/#php","text":"The tubee server requires PHP 7.2. If your current distribution does not provide 7.2 out of their stable archives (which is most certainly the case) please add the PPA ppa:ondrej/php which will provide the latest PHP 7.2 releases. sudo apt-get install lsb-release ca-certificates sudo wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg echo deb https://packages.sury.org/php/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/php.list sudo apt-get update","title":"PHP"},{"location":"10-deploy-server/#mongodb","text":"tubee uses MongoDB as its main database. At least MongoDB 3.4 is required. If your current distribution does not ship at least this release you will need to add the official MongoDB repository. Note : MongoDB recommends to use the official MongoDB repository anyway since the releases in the debian and or ubuntu repositories are not maintained by them and lack newer minor releases. sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5 echo deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/3.6 main | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list sudo apt-get update Note : This will add the repository for debian jessie, if you need another repository please refer to the MongoDB installation docs.","title":"MongoDB"},{"location":"10-deploy-server/#install-tubee","text":"Now tubee and its components can be installed. apt-get install mongodb-org tubee","title":"Install tubee"},{"location":"10-deploy-server/#docker-docker-compose","text":"The easiest, fastest and recommended way to deploy a tubee environment is to spin it up using docker and docker-compose. Since the installation is not the same for different host os and docker can be started on Linux, Windows and Mac please visit the docker documentation on how to install docker and docker-compose . Now a docker-compose file is required with all required containers by tubee. Create a file named tubee-stable.yaml with this content: Requirements : docker docker-compose mongodb: image: mongo:3.6.0 postfix: image: webuni/postfix tubee: image: gyselroth/tubee:latest links: - clamav - mongodb - elasticsearch - postfix - browserless entrypoint: php-fpm environment: - BALLOON_MONGODB_URI=mongodb://mongodb:27017 - BALLOON_CLAMAV_URI=tcp://clamav:3310 - BALLOON_ELASTICSEARCH_URI=http://elasticsearch:9200 - BALLOON_WOPI_URL=https://tubee - BALLOON_SMTP_HOST=postfix - BALLOON_URL=http://localhost:8080 - BALLOON_BURL_BROWSERLESS_URL=http://browserless:3000 tubee-jobs: image: gyselroth/tubee:latest links: - clamav - mongodb - elasticsearch - postfix - browserless entrypoint: tubeecli jobs environment: - BALLOON_MONGODB_URI=mongodb://mongodb:27017 - BALLOON_CLAMAV_URI=tcp://clamav:3310 - BALLOON_ELASTICSEARCH_URI=http://elasticsearch:9200 - BALLOON_WOPI_URL=https://tubee - BALLOON_SMTP_HOST=postfix - BALLOON_URL=http://localhost:8080 - BALLOON_BURL_BROWSERLESS_URL=http://browserless:3000 The tubee server can now be started using: docker-compose -f tubee-stable.yaml up You need to initialize tubee once (You do not need to execute this everytime you start the server via docker-compose, it is just a one time call): docker exec tubee-stable-tubee_1 tubeecli upgrade -i -vvv Note : All tubee containers provide a version tag besides latest . It is best practice to use an exact version of a service instead the latest tag in production environment. The containers provide a latest-unstable tag for the tubee-jobs, tubee and tubee-web container. It is in no way reccomened to use pre-releases in production environments! Note : If you want to install beta and alpha versions replace latest with latest-unstable or specify an exact version tag. Pre-releases are only ment for testing purposes and are in no way recommended in production environements!","title":"Docker (docker-compose)"},{"location":"10-deploy-server/#deploy-on-kubernetes","text":"","title":"Deploy on kubernetes"},{"location":"10-deploy-server/#using-the-tar-archive","text":"Instead a deb package you may also use a tar archive and install tubee manually on your system. A tar archive is an already builded relase, you you just need to have all requirements installed on your system, you may have a look at Manually install from source .","title":"Using the tar archive"},{"location":"10-deploy-server/#manually-install-from-source","text":"This topic is only for advanced users or developers and describes how to deploy tubee by installing from source. If you are a developer please also continue reading this article. Requirements : posix based operating system (Basically every linux/unix) make comoser git php = 7.2 php ext-mongodb php ext-curl php ext-mbstring php ext-posix php ext-pnctl * php ext-apcu Optional requirements : php ext-imagick (If you want to use The ImageEndpoint) php ext-ldap (If you want to use LDAP authentication and/or the LdapEndpoint) php ext-smb (If you want to use the SmbStorage) php ext-xml (If you want to use the XmlEndpoint) php ext-pdo (If you want to use the PdoEndpoint) php ext-mysql (If you want ot use the MysqlEndpoint) This will only install the tubee server. Dependencies such as MongoDB do not get installed. You can install those dependencies either by using distributed packages, see Debian based distribution or by installing them seperately from source.","title":"Manually install from source"},{"location":"10-deploy-server/#install-tubee-server","text":"git clone https://github.com/gyselroth/tubee.git cd tubee make install Note : You can also create .deb or .tar packages using make. Just execute either make deb or make tar or make dist for both.","title":"Install tubee server"}]}